$date
  Thu Aug 20 13:29:28 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module test $end
$var reg 5 ! reg_zs_ex[4:0] $end
$var reg 5 " reg_zt_ex[4:0] $end
$var reg 5 # reg_zd_mem[4:0] $end
$var reg 5 $ reg_zd_wb[4:0] $end
$var reg 1 % regwrite_mem $end
$var reg 1 & regwrite_wb $end
$var reg 2 ' forwarda[1:0] $end
$var reg 2 ( forwardb[1:0] $end
$scope module fw_0 $end
$var reg 5 ) reg_zs_ex[4:0] $end
$var reg 5 * reg_zt_ex[4:0] $end
$var reg 5 + reg_zd_mem[4:0] $end
$var reg 5 , reg_zd_wb[4:0] $end
$var reg 1 - regwrite_mem $end
$var reg 1 . regwrite_wb $end
$var reg 2 / forwarda[1:0] $end
$var reg 2 0 forwardb[1:0] $end
$var reg 1 1 founda $end
$var reg 1 2 foundb $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00001 !
b00010 "
b00001 #
b00001 $
1%
1&
b01 '
b00 (
b00001 )
b00010 *
b00001 +
b00001 ,
1-
1.
b01 /
b00 0
11
02
#3000000
b00011 #
b0X '
b00011 +
b0X /
b00 0
01
#6000000
b00011 !
b00001 "
b01 '
b10 (
b00011 )
b00001 *
b01 /
b10 0
11
#9000000
